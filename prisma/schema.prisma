generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String?
  provider                 String?
  providerAccountId        String?
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  ext_expires_in           Int?
  refresh_token_expires_in Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  username        String?   @unique
  emailVerified   DateTime?
  image           String?   @default("https://jwxqxlsoznvanzoqgpvb.supabase.co/storage/v1/object/public/profile-pictures/Perfil_default.png")
  organizations   String?
  role            String?
  description     String?
  accounts        Account[]
  sessions        Session[]
  eventsConfirmed Event[]   @relation("confirmed")
  eventsOwned     Event[]   @relation("owned")
}

model Event {
  id             String      @id @default(cuid())
  name           String
  description    String
  lastUpdate     DateTime    @updatedAt
  image          String      @default("https://jwxqxlsoznvanzoqgpvb.supabase.co/storage/v1/object/public/profile-pictures/Perfil_default.png")
  location       String
  visibility     String
  shortlink      String? @unique
  rrule          String?
  linkVisibility String      @default("organizationMember")
  dates          DateStamp[]
  tags           Tag[]       @relation("EventToTag")
  confirmed      User[]      @relation("confirmed")
  owners         User[]      @relation("owned")
}

model DateStamp {
  id      String   @id @default(cuid())
  start   DateTime
  end     DateTime
  eventId String
  event   Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model Admin {
  email String @unique
}

model Tag {
  name     String  @id @unique
  tagColor String
  events   Event[] @relation("EventToTag")
}

model OrganizationMember {
  email String @unique
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
